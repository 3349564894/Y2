<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
">
    <context:component-scan base-package="com.yq.service.*,com.yq.aop,com.yq.dao.*"></context:component-scan>
    <bean class="com.yq.aop.UserServiceLogger" id="serviceLogger"></bean>
    <aop:aspectj-autoproxy/>
    <!--    <bean class="com.yq.entity.User" id="user"></bean>-->
    <!--    <bean id="userDao" class="com.yq.dao.impl.UserDaoImpl"></bean>-->
    <!--    <bean id="userService" class="com.yq.service.impl.UserServiceImpl">-->
    <!--        <property name="userDao" ref="userDao"/>-->
    <!--        <constructor-arg name="userDao" ref="userDao"/>-->
    <!--    </bean>-->
    <!--        声明增强方法所在的Bean-->
    <!--    <bean id="theLogger" class="com.yq.aop.UserServiceLogger"></bean>-->
    <!--    &lt;!&ndash;    配置切面&ndash;&gt;-->
    <!--    <aop:config>-->
    <!--        &lt;!&ndash;        定义切入点&ndash;&gt;-->
    <!--        <aop:pointcut id="pointcut" expression="execution(public void save(com.yq.entity.User))"/>-->
    <!--        &lt;!&ndash;        引用包含增强方法的Bean&ndash;&gt;-->
    <!--        <aop:aspect ref="theLogger">-->
    <!--            &lt;!&ndash;            将before（）方法定义为前置增强并引用pointcut切入点&ndash;&gt;-->
    <!--            <aop:before method="before" pointcut-ref="pointcut"/>-->
    <!--            &lt;!&ndash;            将afterReturning()方法定义为后置增强并引用pointcut切入点&ndash;&gt;-->
    <!--            &lt;!&ndash;            通过returning属性指定为名为result的参数注入返回值&ndash;&gt;-->
    <!--            <aop:after-returning method="afterReturning" pointcut-ref="pointcut" returning="result"/>-->
    <!--        </aop:aspect>-->
    <!--    </aop:config>-->


    <!--    声明增强方法所在的Bean,异常增强-->
    <!--    <bean id="theLogger1" class="com.yq.aop.ErrorLogger"></bean>-->
    <!--    <aop:config>-->
    <!--        <aop:pointcut id="pointcut" expression="execution(* com.yq.service.UserService.*(..))"/>-->
    <!--        <aop:aspect ref="theLogger1">-->
    <!--            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut" throwing="e" />-->
    <!--        </aop:aspect>-->
    <!--    </aop:config>-->

    <!--    &lt;!&ndash;    声明增强方法所在的Bean,最终增强&ndash;&gt;-->
    <!--    <bean id="theLogger2" class="com.yq.aop.AfterLogger"></bean>-->
    <!--    <aop:config>-->
    <!--        <aop:aspect ref="theLogger2">-->
    <!--            <aop:pointcut id="pointcut" expression="execution(* com.yq.service.UserService.*(..))"/>-->
    <!--            <aop:after method="afterLogger" pointcut-ref="pointcut"/>-->
    <!--        </aop:aspect>-->
    <!--    </aop:config>-->

    <!--    &lt;!&ndash;    声明增强方法所在的Bean,环绕增强&ndash;&gt;-->
    <!--    <bean class="com.yq.aop.AroundLogger" id="aroundLogger"></bean>-->
    <!--    <aop:config>-->
    <!--        <aop:pointcut id="pointcut" expression="execution(* com.yq.service.UserService.*(..))"/>-->
    <!--        <aop:aspect ref="aroundLogger">-->
    <!--            <aop:around method="afterLogger" pointcut-ref="pointcut"/>-->
    <!--        </aop:aspect>-->
    <!--    </aop:config>-->

    <!--    不同类型赋值-->
    <!--    <bean class="com.yq.entity.TestEntity" id="testEntity">-->
    <!--        <property name="emptyValue">-->
    <!--&lt;!&ndash;            "" 空&ndash;&gt;-->
    <!--            <value></value>-->
    <!--        </property>-->
    <!--        <property name="nullValue">-->
    <!--&lt;!&ndash;            null 空&ndash;&gt;-->
    <!--            <null></null>-->
    <!--        </property>-->
    <!--        <property name="specialCharacter1">-->
    <!--&lt;!&ndash;            使用CDATE插入特殊字符&ndash;&gt;-->
    <!--            <value>-->
    <!--                <![CDATA[-->
    <!--                <我是路飞哦>-->
    <!--                ]]>-->
    <!--            </value>-->
    <!--        </property>-->
    <!--        <property name="specialCharacter2">-->
    <!--&lt;!&ndash;            使用实体引用&ndash;&gt;-->
    <!--            <value>-->
    <!--                &lt;&amp;我是路飞&gt;-->
    <!--            </value>-->
    <!--        </property>-->
    <!--        <property name="array">-->
    <!--&lt;!&ndash;            数组类型赋值&ndash;&gt;-->
    <!--            <array>-->
    <!--                <value>我是第一个array</value>-->
    <!--                <value>我是第二个array</value>-->
    <!--                <value>我是第三个array</value>-->
    <!--            </array>-->
    <!--        </property>-->
    <!--        <property name="list">-->
    <!--&lt;!&ndash;            list赋值&ndash;&gt;-->
    <!--                <list>-->
    <!--                    <value>我是第一个list</value>-->
    <!--                    <value>我是第二个list</value>-->
    <!--                    <value>我是第三个list</value>-->
    <!--                </list>-->
    <!--        </property>-->
    <!--        <property name="set">-->
    <!--            <set>-->
    <!--                <value>第一个set</value>-->
    <!--                <value>第二个set</value>-->
    <!--                <value>第三个set</value>-->
    <!--            </set>-->
    <!--        </property>-->
    <!--        <property name="map">-->
    <!--            <map>-->
    <!--                <entry key="key1" value="value1"/>-->
    <!--                <entry key="key2" value="value2"/>-->
    <!--                <entry key="key3" value="value3"/>-->
    <!--            </map>-->
    <!--        </property>-->
    <!--        <property name="properties">-->
    <!--            <props>-->
    <!--                <prop key="key1">-->
    <!--                    value1-->
    <!--                </prop>-->
    <!--                <prop key="key2">-->
    <!--                    value2-->
    <!--                </prop>-->
    <!--                <prop key="key3">-->
    <!--                    value3-->
    <!--                </prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--        <property name="user">-->
    <!--            <ref bean="user"/>-->
    <!--        </property>-->
    <!--        <property name="innerBean">-->
    <!--            <bean class="com.yq.entity.User"/>-->
    <!--        </property>-->
    <!--    </bean>-->
</beans>